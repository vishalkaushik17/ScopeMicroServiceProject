using GenericFunction;
using GenericFunction.Enums;
using ModelTemplates.Core.GenericModel;

namespace ModelTemplates.Persistence.Models.School.Employee;

/// <summary>
/// this model represents employee, student, parent data, here record type represents type of record eg. record type = employee, student or parent
/// </summary>
public class EmployeeStudentParentModel : BaseTemplate
{

    /// <summary>
    /// Kind of employment
    /// </summary>
    public EmploymentType EmploymentType { get; set; }

    /// <summary>
    /// Type of record eg. employee,student, parent etc
    /// </summary>
    public RecordType RecordType { get; set; }

    /// <summary>
    /// Designation id
    /// </summary>
    public string DesignationId { get; set; }

    /// <summary>
    /// Employee designation
    /// </summary>
    public DesignationModel Designation { get; set; }


    /// <summary>
    /// Report to whom or get permission to modify any record which is operated by this employee.
    /// </summary>
    //public string ReportingHeadId { get; set; }

    //Bank id
    public string BankId { get; set; }

    //Bank account belongs to which bank.
    public BankModel Bank { get; set; }

    /// <summary>
    /// list of degrees employee has
    /// </summary>
    public List<EmployeeQualificationModel> EmployeeParentVsQualifications { get; set; } = new List<EmployeeQualificationModel>();

    /// <summary>
    /// Id generated by school to identify this record, here they can use any HR related software id.
    /// </summary>
    public string SchoolSpecificId { get; set; }

    /// <summary>
    /// First name of the employee
    /// </summary>
    public string FirstName { get; set; }
    /// <summary>
    /// Middle name of the employee
    /// </summary>
    public string MiddleName { get; set; }

    /// <summary>
    /// Last name/surname of the employee
    /// </summary>

    public string LastName { get; set; }

    /// <summary>
    /// Name of mother
    /// </summary>
    public string MotherName { get; set; }

    /// <summary>
    /// Contact no which is going to be used as login id for this user.
    /// </summary>
    public string ContactNo { get; set; }

    /// <summary>
    /// Email id provided by school
    /// </summary>
    public string ProfessionalEmailId { get; set; }

    /// <summary>
    /// Personal email id.
    /// </summary>
    public string PersonalEmailId { get; set; }

    /// <summary>
    /// Permanent Account No for form 16
    /// </summary>
    public string PanNo { get; set; }

    /// <summary>
    /// Election id no
    /// </summary>
    public string ElectionId { get; set; }

    /// <summary>
    /// Aadhar no
    /// </summary>
    public string UIDNo { get; set; }

    /// <summary>
    /// Permanent address id
    /// </summary>
    public string PermanentAddressId { get; set; }

    /// <summary>
    /// Permanent address record
    /// </summary>
    public AddressModel PermanentAddress { get; set; }

    /// <summary>
    /// Communication id
    /// </summary>
    public string CommunicationAddressId { get; set; }

    /// <summary>
    /// Communication address
    /// </summary>
    public AddressModel CommunicationAddress { get; set; }

    /// <summary>
    /// Gender of employee/student/parent
    /// </summary>
    public Gender Gender { get; set; }

    /// <summary>
    /// Marital status of employee
    /// </summary>
    public MaritalStatus MaritalStatus { get; set; }

    /// <summary>
    /// Blood group
    /// </summary>
    public BloodGroup BloodGroup { get; set; }

    /// <summary>
    /// Emergency contact no
    /// </summary>
    public string EmergencyContactNo { get; set; }

    /// <summary>
    /// Residential contact no
    /// </summary>
    public string ResidentContactNo { get; set; }

    /// <summary>
    /// Employee/Student belongs to which cast.
    /// </summary>
    public string Cast { get; set; }


    /// <summary>
    /// Religion followed by the employee/student.
    /// </summary>
    public Religion Religion { get; set; }


    /// <summary>
    /// Work experience summary.
    /// </summary>
    public string WorkExperience { get; set; }

    /// <summary>
    /// Date of birth
    /// </summary>
    public DateTime DateOfBirth { get; set; }

    /// <summary>
    /// Photo
    /// </summary>
    public string Photograph { get; set; }

    /// <summary>
    /// Achievements taken by employee/student
    /// </summary>
    public string Achievements { get; set; }

    /// <summary>
    /// Bank ifsc code
    /// </summary>
    public string Ifsccode { get; set; }

    /// <summary>
    /// Bank MICR Code
    /// </summary>
    public string MICRCode { get; set; }

    /// <summary>
    /// Bank branch name
    /// </summary>
    public string BranchName { get; set; }

    /// <summary>
    /// Bank belongs to which state
    /// </summary>
    public string BankState { get; set; }

    /// <summary>
    /// Bank belongs to which city
    /// </summary>
    public string BankCity { get; set; }

    /// <summary>
    /// Spouse name
    /// </summary>
    public string Spouse { get; set; }

    /// <summary>
    /// Spouse contact no
    /// </summary>
    public string SpouseContactNo { get; set; }

    /// <summary>
    /// Passport no
    /// </summary>
    public string PassportNo { get; set; }

    /// <summary>
    /// Citizenship of employee/student/parent
    /// </summary>
    public Citizenship Citizenship { get; set; }
    /// <summary>
    /// Default save method, which will set Room record as per logged in UserId
    /// </summary>
    /// <param name="userId">Logged in User Id</param>
    public new void Save(string userId)
    {
        base.Save(userId);
        FirstName = FirstName.ToUpper().RemoveSpaces();
        MiddleName = MiddleName.ToUpper().RemoveSpaces();
        LastName = LastName.ToUpper().RemoveSpaces();
        MotherName = MotherName.ToUpper().RemoveSpaces();
        Spouse = Spouse.ToUpper().RemoveSpaces();
        BankCity = BankCity.ToCamelCase().RemoveSpaces();
        BankState = BankState.ToCamelCase().RemoveSpaces();
        BranchName = BranchName.ToCamelCase().RemoveSpaces();
        Achievements = Achievements.RemoveSpaces();
        Ifsccode = Ifsccode.ToUpper().RemoveSpaces();
        MICRCode = MICRCode.ToUpper().RemoveSpaces();
        WorkExperience = WorkExperience.RemoveSpaces();
        Cast = Cast.ToCamelCase().RemoveSpaces();
        ResidentContactNo = ResidentContactNo.RemoveSpaces();
        EmergencyContactNo = EmergencyContactNo.RemoveSpaces();
        ElectionId = ElectionId.ToUpper().RemoveSpaces();
        PanNo = PanNo.ToUpper().RemoveSpaces();
        UIDNo = UIDNo.RemoveSpaces();
        PersonalEmailId = PersonalEmailId.ToLower().RemoveSpaces();
        ProfessionalEmailId = ProfessionalEmailId.ToLower().RemoveSpaces();
        ContactNo = ContactNo.RemoveSpaces();

    }

    /// <summary>
    /// Default save method, which will set Room record as per logged in UserId
    /// </summary>
    /// <param name="userId">Logged in User Id</param>
    public new void Update(string userId)
    {
        this.Save(userId);
        base.Update();
    }


}