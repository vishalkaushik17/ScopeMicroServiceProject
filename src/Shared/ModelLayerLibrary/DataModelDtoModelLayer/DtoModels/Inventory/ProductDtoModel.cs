using Microsoft.AspNetCore.Http;
using ModelTemplates.DtoModels.BaseDtoContract;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics.CodeAnalysis;

namespace ModelTemplates.DtoModels.Inventory;

/// <summary>
/// Product Dto model
/// </summary>
public class ProductDtoModel : BaseDtoTemplate
{

    /// <summary>
    /// Product name.
    /// </summary>
    [Required(ErrorMessage = "Product name is required!")]
    [StringLength(40, ErrorMessage = "Provided value exceed the required limit (40 Characters).")]
    public string ProductName { get; set; } = string.Empty;

    /// <summary>
    /// Product details/description
    /// </summary>
    [StringLength(1000, ErrorMessage = "Provided value exceed the required limit (1000 Characters).")]
    public string Details { get; set; } = string.Empty;

    /// <summary>
    /// Barcode provided by manufacturer
    /// </summary>
    [StringLength(15, ErrorMessage = "Provided value exceed the required limit (15 Characters).")]
    public string? CompanyBarCode { get; set; }

    /// <summary>
    /// Custom barcode which is generated by school/institute 
    /// </summary>
    [StringLength(15, ErrorMessage = "Provided value exceed the required limit (15 Characters).")]
    public string? CustomBarCode { get; set; }

    /// <summary>
    /// Unit per box/pcs
    /// </summary>
    [Range(1, 100000, ErrorMessage = "Invalid units! Required minimum value is 1 & maximum value is 100000.")]
    public double UnitPerBox { get; set; }

    /// <summary>
    /// Product image.
    /// </summary>
    //    [StringLength(100, ErrorMessage = "Provided value exceed the required limit (100 Characters).")]
    [AllowNull]
    public byte[]? ProductImage { get; set; }

    [AllowNull]
    public IFormFile? UploadImage { get; set; }
}